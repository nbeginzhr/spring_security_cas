<?xml version="1.0" encoding="UTF-8"?>
<!--
| deployerConfigContext.xml centralizes into one file some of the declarative configuration that
| all CAS deployers will need to modify.
|
| This file declares some of the Spring-managed JavaBeans that make up a CAS deployment.
| The beans declared in this file are instantiated at context initialization time by the Spring
| ContextLoaderListener declared in web.xml.  It finds this file because this
| file is among those declared in the context parameter "contextConfigLocation".
|
| By far the most common change you will need to make in this file is to change the last bean
| declaration to replace the default authentication handler with
| one implementing your approach for authenticating usernames and passwords.
+-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <util:map id="authenticationHandlersResolvers">
        <entry key-ref="proxyAuthenticationHandler" value-ref="proxyPrincipalResolver"/>
        <entry key-ref="primaryAuthenticationHandler" value-ref="primaryPrincipalResolver"/>
    </util:map>

    <util:list id="authenticationMetadataPopulators">
        <ref bean="successfulHandlerMetaDataPopulator"/>
        <ref bean="rememberMeAuthenticationMetaDataPopulator"/>
    </util:list>

    <!-- 自定义登录成功返回的用户信息 -->
    <bean id="attributeRepository" class="org.jasig.services.persondir.support.NamedStubPersonAttributeDao"
          p:backingMap-ref="attrRepoBackingMap"/>
    <util:map id="attrRepoBackingMap">
        <entry key="uid" value="uid"/>
        <entry key="eduPersonAffiliation" value="eduPersonAffiliation"/>
        <entry key="groupMembership" value="groupMembership"/>
        <entry>
            <key>
                <value>memberOf</value>
            </key>
            <list>
                <value>faculty</value>
                <value>staff</value>
                <value>org</value>
            </list>
        </entry>
    </util:map>
    <!--<bean id="attributeRepository" class="cn.haoyu.casServer.configuration.HaoyuPersonAttributeDao"/>-->


    <!-- 首要的认证方式，修改为数据库认证
    <alias name="acceptUsersAuthenticationHandler" alias="primaryAuthenticationHandler" />
    -->
    <alias name="haoyuQueryDatabaseAuthenticationHandler" alias="primaryAuthenticationHandler"/>
    <bean id="haoyuQueryDatabaseAuthenticationHandler" class="cn.haoyu.casServer.authontication.HaoyuQueryDatabaseAuthenticationHandler"/>
    <alias name="dataSource" alias="queryDatabaseDataSource"/>
    <!-- 密码编码 -->
    <alias name="haoyuPasswordEncoder" alias="passwordEncoder"/>
    <bean id="haoyuPasswordEncoder" class="cn.haoyu.casServer.authontication.HaoyuPasswordEncoder"/>
    <alias name="dataSource" alias="queryEncodeDatabaseDataSource"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          p:driverClass="${database.driverClass}"
          p:jdbcUrl="${database.url}"
          p:user="${database.user}"
          p:password="${database.password}"
          p:initialPoolSize="${database.pool.minSize}"
          p:minPoolSize="${database.pool.minSize}"
          p:maxPoolSize="${database.pool.maxSize}"
          p:maxIdleTimeExcessConnections="${database.pool.maxIdleTime}"
          p:checkoutTimeout="${database.pool.maxWait}"
          p:acquireIncrement="${database.pool.acquireIncrement}"
          p:acquireRetryAttempts="${database.pool.acquireRetryAttempts}"
          p:acquireRetryDelay="${database.pool.acquireRetryDelay}"
          p:idleConnectionTestPeriod="${database.pool.idleConnectionTestPeriod}"
          p:preferredTestQuery="${database.pool.connectionHealthQuery}"/>

    <!-- 登录信息解析返回 -->
    <!--<alias name="personDirectoryPrincipalResolver" alias="primaryPrincipalResolver"/>-->
    <!-- 自定义登录信息解析返回 -->
    <alias name="haoyuPersonPrincipalResolver" alias="primaryPrincipalResolver"/>
    <bean id="haoyuPersonPrincipalResolver" class="cn.haoyu.casServer.authontication.HaoyuPersonPrincipalResolver"/>

    <alias name="serviceThemeResolver" alias="themeResolver"/>

    <alias name="jsonServiceRegistryDao" alias="serviceRegistryDao"/>

    <alias name="defaultTicketRegistry" alias="ticketRegistry"/>

    <alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy"/>
    <alias name="multiTimeUseOrTimeoutExpirationPolicy" alias="serviceTicketExpirationPolicy"/>

    <alias name="anyAuthenticationPolicy" alias="authenticationPolicy"/>
    <alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory"/>

    <bean id="auditTrailManager"
          class="org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager"
          p:entrySeparator="${cas.audit.singleline.separator:|}"
          p:useSingleLine="${cas.audit.singleline:false}"/>

    <alias name="neverThrottle" alias="authenticationThrottle"/>

    <util:list id="monitorsList">
        <ref bean="memoryMonitor"/>
        <ref bean="sessionMonitor"/>
    </util:list>

    <alias name="defaultPrincipalFactory" alias="principalFactory"/>
    <alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager"/>
    <alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy"/>
    <alias name="tgcCipherExecutor" alias="defaultCookieCipherExecutor"/>
</beans>
